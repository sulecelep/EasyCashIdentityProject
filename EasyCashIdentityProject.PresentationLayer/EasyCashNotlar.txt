EASY CASH IDENTITY with ASP .NET CORE 6.0

2.Ders Notları:

* 6.0 'da Startup yok o yüzden geçişler kolay oluyor.
* Tek tek paket yüklemek yerine Solution'da sağ tıklayıp nugette paket yüklüyoruz.
* Microsoft.EntityFrameworkCore 6.0.16  (6.0'ın son sürümünü indirdik)
* Microsoft.EntityFrameworkCore.Design 6.0.16  (6.0'ın son sürümünü indirdik)
* Microsoft.EntityFrameworkCore.SQLServer 6.0.16  (6.0'ın son sürümünü indirdik)
* Microsoft.EntityFrameworkCore.Tools 6.0.16  (6.0'ın son sürümünü indirdik)
* Microsoft.AspNetCore.Identity 2.2.0
* Microsoft.AspNetCore.Identity.EntityFrameworkCore 6.0.16 

3.Ders Notları:

Katmanların birbirleriyle referans işlemleri.
EntityLayer: ...
DataAccessLayer: EL
BusinessLayer: DAL + EL
PresentationLayer: EL + DAL+ BL
//DTO'yu sonra dahil edicez.

Concrete: Sınıflar için kullanılır. 
Abstract: Interfacce için.

Access Modifiers: Erişim belirleyicileri
-Public:her klasör sınıf vs 'den ulaşılabilir.
-Private: sadece kullanıldığı namespace içinde erişim sağlanabiliyor. 
-Protected: bağlı bulunduğu sınıftan ve o sınıfı kalıtsal olarak alan sınıflardan erişilebiliyor.
-Internal: sadece bulunduğu katmanda erişim sağlanabilir.

4.Ders Notları:

Migration eklerken Up veritabanında oluşacakları gösterirken, down iptal edersek nelerin silineceğini gösterir.

Asp.Net Users:
Id'nin türü Nvarchar
EmailConfirmed türü byte (email adresi onaylandı mı onaylanmadı mı kontrolü)
-Register > Maile 6 haneli kod Gönder > Kullanıcı kodu girsin > EmailConfirmed true olsun
-Login > Kullanıcı adı, şifre, email conf==true
-Stampler başka bir sosyal medya racılığıyla giriş yaparken
-TwoFactorEnabled (iki adımda doğrulama)
-LockoutEnd hesabın kilitli kalmasının bitme süresi (default 5 dakika)
-LockOutEnabled true olursa hatalı girişi sayar
-AccessFailedCount kaç kere yanlış bilgi girildi

AspNetRoles:
Id
Name Admin, Member .. 
NormalizedName büyük harflerle yazıldığı hali
ConcurrencyStamp

5.Ders Notları:

AspNetUser Tablosunun Özelleştirilmesi

-AspNetUser'a kendimiz property eklemek için Entity katmanında AppUser sınıfını açtık.
-AppUser sınıfının Identity ile çalışması için IdentityUser classıyla inherit ettik
-IdentyUser sınıfının primary key yani Id için data tipi olarak int kullanmasını istediğimiz için;
AppUser:IdentityUser<int> olarak yazdık.
-AspNetRoles tablosu için de AppRole sınıfı açtık ve IdentityRole sınıfıyla inherit ettik.
-Nvarchar olduğu için onun da TKey parametresini int yaptık.
-Migration'da hata aldık. Context sınıfını DbContext ile inherit edip tekrar mig. yaptık böylece Identityden gelen tabloları sildik.
-Tekrar Context'e IdentityDbContext'i 2. overloadından inherit edip migration yaptığımızda hata almadık.
-Hatanın sebebi: Identity propertysinin değiştirilmesiydi. Yani IdentityDbContext ile inherit ederken
en başından AppRole ve AppUser tablosunun da inherit edilmesi gerekiyordu. Ayrı ayrı olunca hata verdi.



